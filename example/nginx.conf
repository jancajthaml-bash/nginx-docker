daemon off;

user  nginx;

thread_pool ideal threads=32;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    accept_mutex off;
}

http {
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    keepalive_timeout 65;
    keepalive_requests 100000;
    sendfile         on;
    tcp_nopush       on;
    tcp_nodelay      on;

    client_body_buffer_size    128k;
    client_max_body_size       10m;
    client_header_buffer_size    1k;
    server_names_hash_bucket_size 128;
    large_client_header_buffers  4 4k;
    output_buffers   1 32k;
    postpone_output  1460;

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;

    gzip on;
    gzip_min_length  1000;
    gzip_buffers     4 4k;

    # [ debug | info | notice | warn | error | crit | alert | emerg ]
    error_log  /var/log/nginx.error_log  warn;

    log_format main      '$remote_addr - $remote_user [$time_local]  '
      '"$request" $status $bytes_sent '
      '"$http_referer" "$http_user_agent" '
  		'"$gzip_ratio"';

    log_format download  '$remote_addr - $remote_user [$time_local]  '
      '"$request" $status $bytes_sent '
      '"$http_referer" "$http_user_agent" '
  		'"$http_range" "$sent_http_content_range"';

    map $status $loggable {
        ~^[23]  0;
        default 1;
    }

    # assets server
    server {
        more_set_headers 'Server: asset';

        location ~* .(woff|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|ico|css|js)$ {
            expires 365d;
        }

        server_name   127.0.0.1;
        root          /var/www;
        access_log    /var/log/nginx.access_log main;
    }

    # cleartext server
    server {
        more_set_headers 'Server: cleartext';

       listen        8080;
       listen   [::]:8080;

       server_name   127.0.0.1;
       return        301 https://$server_name$request_uri;
    }

    # secured server
    server {
        more_set_headers 'Server: secured';

        listen      443 ssl http2;
        listen [::]:443 ssl http2;

        server_name   127.0.0.1;
        root          /var/www;

        location / {
            aio threads=ideal;
            try_files $uri /index.html;
        }

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    }
}
